{"version":3,"sources":["containers/reducers/asyncReducer.js","containers/store/store.js","containers/actionCreators/userActionCreators.js","containers/actions/userActions.js","components/GitUserSearch/SearchForm/SearchForm.js","components/GitUserSearch/ProfileCard/ProfileCard.js","components/Layouts/Loader/Loader.js","components/GitUserSearch/GitUserSearch.js","index.js"],"names":["initialState","isFetching","userData","isError","asyncReducer","state","action","type","data","rootReducer","combineReducers","gitSearch","store","createStore","applyMiddleware","thunk","getUserInfo","username","query","replace","dispatch","getstate","fetch","then","json","message","Error","receive_post","catch","err","SearchForm","props","handleSubmit","e","preventDefault","getUsername","current","value","focus","createRef","this","className","id","ref","required","onClick","Component","connect","profileCard","alt","src","user","avatar_url","name","location","public_repos","followers","following","loader","GitSearch","href","rel","target","isLoading","Loader","Object","keys","length","ProfileCard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.034db747.chunk.js","sourcesContent":["const initialState = {\r\n    isFetching: false,\r\n    userData: {},\r\n    isError: false\r\n};\r\n\r\nconst asyncReducer = (state = initialState, action) =>\r\n{\r\n    switch (action.type)\r\n    {\r\n        case \"FETCH_USER\":\r\n            return { ...state, isFetching: true, userData: {}, isError: false };\r\n        case \"FETCHED_USER\":\r\n            return { ...state, userData: action.data, isFetching: false, isError: false };\r\n        case \"RECEIVE_ERROR\":\r\n            return { ...state, isError: true, userData: {}, isFetching: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default asyncReducer; ","import { applyMiddleware, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport asyncReducer from \"../reducers/asyncReducer\";\r\n\r\nconst rootReducer = combineReducers({ gitSearch: asyncReducer });\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;","import { fetch_post, receive_post, receive_error } from \"../actions/userActions\";\r\n\r\nexport const getUserInfo = (username) =>\r\n{\r\n    const query = username.replace(/\\s/g, \"\");\r\n    return (dispatch, getstate) =>\r\n    {\r\n        dispatch(fetch_post());\r\n        fetch(`https://api.github.com/users/${query}`).then(data => data.json())\r\n            .then(data =>\r\n            {\r\n                if (data.message === \"Not Found\")\r\n                {\r\n                    throw new Error(\"No such user found!!\");\r\n                } else dispatch(receive_post(data));\r\n            })\r\n            .catch(err => dispatch(receive_error()));\r\n    }\r\n};\r\n","export const fetch_post = () => ({ type: \"FETCH_USER\" });\r\nexport const receive_post = (data) => ({ type: \"FETCHED_USER\", data });\r\nexport const receive_error = () => ({ type: \"RECEIVE_ERROR\" });","import React, { Component, createRef } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserInfo } from \"../../../containers/actionCreators/userActionCreators\";\r\n\r\nclass SearchForm extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.getUsername = createRef();\r\n    }\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        const username = this.getUsername.current.value;\r\n        this.props.dispatch(getUserInfo(username));\r\n        this.getUsername.current.value = '';\r\n        this.getUsername.current.focus();\r\n    }\r\n    componentDidMount()\r\n    {\r\n        this.getUsername.current.focus();\r\n    }\r\n    render()\r\n    {\r\n\r\n        return (\r\n            <div className=\"field is-horizontal userid-label-field\">\r\n                <div className=\"field-label is-normal\">\r\n                    <label className=\"label\">User-Name:</label>\r\n                </div>\r\n                <div className=\"field-body userid-field\">\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input id=\"user_id\" className=\"input\" ref={this.getUsername} type=\"text\" required />\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <p className=\"control\">\r\n                            <input className=\"button is-link\" type=\"submit\" onClick={this.handleSubmit} value=\"Submit\" />\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\nconst mapStateToProps = (state) => ({ data: state.gitSearch });\r\n\r\nexport default connect(mapStateToProps)(SearchForm);\r\n","import React from \"react\";\r\n\r\nconst profileCard = (props) =>\r\n{\r\n    return (\r\n\r\n\r\n        <div className=\"box\">\r\n            <figure className=\"avatar\">\r\n                <img id=\"avatar\" alt=\"avatar\" src={props.user.avatar_url} />\r\n            </figure>\r\n            <h3 className=\"title has-text-black\"><span id=\"name\">Name</span> <sup><i id=\"pronoun\"></i></sup></h3>\r\n            <div id=\"bio\"></div>\r\n            <br />\r\n            <table className=\"table details\">\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Name:</td>\r\n                        <td><span id=\"name\">{props.user.name}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Location:</td>\r\n                        <td><span id=\"points\" className=\"tag is-info\">{props.user.location || \"N.A\"}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Public Repos:</td>\r\n                        <td><span id=\"posts\" className=\"tag is-warning\">{props.user.public_repos}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Followers:</td>\r\n                        <td><span id=\"reactions\" className=\"tag is-light\">{props.user.followers}</span></td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Following:</td>\r\n                        <td><span id=\"moderator\" className=\"tag is-danger\">{props.user.following}</span></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default profileCard;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\nconst loader = () =>\r\n{\r\n    return (\r\n        <div className=\"progress-bar\">\r\n            <span className=\"bar\">\r\n                <span className=\"progress\"></span>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SearchForm from \"./SearchForm/SearchForm\";\r\nimport ProfileCard from \"./ProfileCard/ProfileCard\";\r\nimport Loader from \"../Layouts/Loader/Loader\";\r\nimport \"./style.css\";\r\nclass GitSearch extends Component\r\n{\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <section className=\"hero is-success is-fullheight\">\r\n                    <div className=\"hero-body\">\r\n                        <div className=\"container has-text-centered\">\r\n                            <div className=\"column is-4 is-offset-4\">\r\n                                <h3 className=\"title has-text-black\"><a href=\"https://webwide.io\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a> Profile Viewer</h3>\r\n                                <hr className=\"login-hr\" />\r\n                                <SearchForm isLoading={this.props.data.isFetching} />\r\n                                {this.props.data.isFetching && <Loader />}\r\n                                {this.props.data.isError ? (\r\n                                    <h3 className=\"error\">No such User exists.</h3>\r\n                                ) : null}\r\n                                {Object.keys(this.props.data.userData).length > 0 ? (\r\n                                    <ProfileCard user={this.props.data.userData} />\r\n                                ) : null}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({ data: state.gitSearch });\r\nexport default connect(mapStateToProps)(GitSearch);\r\n\r\n","import React from \"react\";\r\nimport store from \"./containers/store/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GitSearch from \"../src/components/GitUserSearch/GitUserSearch\";\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <GitSearch />\r\n    </Provider>\r\n);\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}